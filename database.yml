---
  - name: Configurando m√°quina master
    hosts: database
    become: true
    become_method: sudo
    vars_files:
      - external_vars.yml

    tasks:
      - name: Adicionando repositorio postgres
        apt_repository: repo='{{ postgre_repo }}' state=present

      - name: Install PostgreSQL
        apt: name={{ item }} state=latest update_cache=yes force=yes
        with_items:
          - postgresql-{{ postgre_version }}
          - python-psycopg2
          - libpq-dev
        notify:
          - restart postgresql

      - name: Garantir servico rodando
        service: name=postgresql state=started enabled=yes

      - name: Garantir a base de dados
        become: true
        become_user: postgres
        postgresql_db: state=present db={{ db_name }}

      - name: Garantir acesso do usuario na base
        become: true
        become_user: postgres
        postgresql_user: name={{ db_user }} password={{ db_pass }} state=present priv=CONNECT db={{ db_name }}

      - name: Garantir privilegios do usuario
        become: true
        become_user: postgres
        postgresql_user: name={{ db_user }} role_attr_flags=LOGIN,CREATEDB

      - name: Garantir privilegios do usuario na base
        become: true
        become_user: postgres
        postgresql_privs: privs=ALL type=schema objs=public role={{ db_user }} db={{ db_name }}

      - name: Liberando acesso externo
        replace: dest=/etc/postgresql/{{ postgre_version }}/main/postgresql.conf regexp="#listen_addresses = 'localhost'" replace='listen_addresses = '*''
        notify:
          - restart postgresql

      - name: add a new string at the end of the file
        lineinfile:
          dest: /etc/postgresql/{{ postgre_version }}/main/pg_hba.conf
          regexp: ''
          insertafter: EOF
          line: 'host all all 0.0.0.0/0 trust'
        notify:
          - restart postgresql

    handlers:
      - name: restart postgresql
        service: name=postgresql state=restarted
